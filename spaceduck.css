body {
	background-color: black;
	margin: 0;
	padding: 0;
}

p {
	color: white;
	font-size: 1.5em;
}

#title-screen { /* Center title screen horizontally */
	display: flex;
    justify-content: center;
    align-items: center;
	margin: auto;
	margin-top: 15%;
    width: 40%;
	height: 40%;
}

#end-screen {
	display: flex;
    justify-content: center;
    align-items: center;
	margin: auto;
}

.end-img {
	margin-top: 5%;
	width: 40%;
	height: 40%;
}

#comic {
	background-color: black;
}

.duck {
	padding: 0;
	margin: 0;
	vertical-align: top;
	width: 150px; /* Almost the only statically sized element - everything else uses relative measurements */
	height: 150px;
}

#duck2 {
	position: absolute;
	top: 0;
    bottom: 0;
    margin: auto;
}

#duck3 {
	transition-duration: 2000ms; /* The transition styling makes it so that the duck trails the cursor rather than sticking to it */
    transition-timing-function: ease-out;
    position: fixed;
    transform: translate(-10%, -10%);
}

.diag { /* This class is shared by the dialogue of both characters and stores their common elements - modularity, baby! */
	position: absolute;
	width: 100%;
	left: 0px;
	text-align: center;
	display: none;
}

.duck-diag { /* There are some visible differences in the dialogue, to differentiate between the characters */
	font-family: 'Lato', sans-serif;
	font-weight: bold;
	font-style: italic;
}

.ai-diag {
	font-family: 'Roboto', sans-serif; /* Get it? Roboto? */
	font-weight: bold;
	color: pink;
}

.panel {
	position: relative;
	width: 100%;
	height: 100vh;
	background-image: url("space.jpg");

	display: none; /* Hide all panels at the start; we make them appear one by one with jQuery */
}

#panel1 {
	position: relative;
	width: 98%;
	height: 99vh;
	overflow: hidden;

	display: block; /* By "all" I meant "all but the first one", obviously */
}

#panel2 {
	overflow: hidden; /* If left be, our little duck will fly off screen - this is intentional, but we won't break the immersion with a scrollbar */
}

.flashbacks {
	display: flex;
	margin: auto;
	justify-content: space-between; /* Space out the flashback prompts on the screen */
	align-items: center;
	width: 100%;
	height: 100%;
}

.flashback {
	width: 200px;
	height: 200px;
}

#flashback2 {
	margin-top: -20%; /* Some individual styling to place them higher/lower on the screen */
}

#flashback3 {
	margin-top: 25%;
}

.fb-prompt {
	height: 100%;
	width: 100%;
	object-fit: contain; /* Very handy style; keeps the gifs from overflowing the div boundaries */
}

.fb-images {
	margin: 0;
	display: flex;
	position: absolute;
}

.fb-img {
	flex: 33.33%; /* Each of the flashbacks take up a third of the screen width, to make for a more classic comic feel */
	width: 33vw;
	height: 100%;

	opacity: 0;
	transition: opacity 2s ease-in-out; /* 2 sec fade in/out animation that is triggered when the opacity is changed */
	-moz-transition: opacity 2s ease-in-out; /* For portability */
	-webkit-transition: opacity 2s ease-in-out;
}

/* A faster duck for panel 4 */
#duck4 {
transition-duration: 190ms;
transition-timing-function: ease-out;
position: fixed;
transform: translate(-10%, -10%);
}

.ast-img {
	width: 70px;
	height: 70px;
	position: fixed;
}

#panel5 {
	height: 100%;
	background-image: linear-gradient(black, blue, cyan); /* Instead of the space background, we have a black to cyan gradient to show the duck coming down from space into the water :) */
}

.journey {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  flex-direction: column; /* We also use flexbox here; this time to space out the journey gifs vertically */
  background-image: none;
}

.scroll-img {
	margin-bottom: 15%;
}
